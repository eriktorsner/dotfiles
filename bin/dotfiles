#!/usr/bin/env bash

BIN_NAME=$(basename "$0")
COMMAND_NAME=$1
SUB_COMMAND_NAME=$2

sub_help () {
  echo "Usage: $BIN_NAME <command>"
  echo
  echo "Commands:"
  echo "   clean            Clean up caches (brew, nvm, gem)"
  echo "   dock             Apply macOS Dock settings"
  echo "   edit             Open dotfiles in IDE ($DOTFILES_IDE) and Git GUI ($DOTFILES_GIT_GUI)"
  echo "   help             This help message"
  echo "   macos            Apply macOS system defaults"
  echo "   test             Run tests"
  echo "   update           Update packages and pkg managers (OS, brew, npm, gem)"
  echo "   copy             Get .dotfiles from this repo and Bitwarden to home folder"  
  echo "   sync             Sync current dotfiles back to the repo and Bitwarden"
}

sub_edit () {
  sh -c "$DOTFILES_IDE $DOTFILES_DIR"
  sh -c "$DOTFILES_GIT_GUI $DOTFILES_DIR"
}

sub_test () {
  bats "$DOTFILES_DIR"/test/*.bats
}

sub_update () {
  sudo softwareupdate -i -a
  brew update
  brew upgrade
  npm install npm -g
  npm update -g
  gem update --system
  gem update
}

sub_clean () {
  brew cleanup
  gem cleanup
  . "$NVM_DIR/nvm.sh"; nvm cache clear
}

sub_macos () {
  for DEFAULTS_FILE in "${DOTFILES_DIR}"/macos/defaults*.sh; do
    echo "Applying ${DEFAULTS_FILE}" && . "${DEFAULTS_FILE}"
  done
  echo "Done. Some changes may require a logout/restart to take effect."
}

sub_sync () {
  for FILE in $(cat sync/runcom); do 
    if [[ $FILE == *"/"* ]]; then
      FOLDER=`echo $FILE | awk -F "/" '{print $1}'`
      mkdir -p runcom/$FOLDER
      rsync -a ~/$FILE runcom/$FOLDER/      
    elsesyn
      rsync -a ~/$FILE runcom/      
    fi
  done 
  
  for FILE in $(cat sync/config); do
    FOLDER=`echo $FILE | awk -F "/" '{print $1}'`
    mkdir -p config/$FOLDER
    rsync ~/$FILE config/$FOLDER/
  done

  if ! bin/bwhelper status; then
    echo Can\t sync secrets to BitWarden - halting 
    exit 1
  fi

  bw sync
  IFS=$'\n';
  for FILE in $(cat sync/keys); do
    bin/bwhelper put $FILE
  done

  bw sync

}

sub_copy() {
  rsync -a runcom/ ~
  
  if ! bin/bwhelper status; then
    echo Can\t sync secrets from BitWarden - halting 
    exit 1
  fi

  bw sync

  IFS=$'\n';
  for FILE in $(cat sync/keys); do
    bin/bwhelper get $FILE
  done
}

sub_dock () {
  . "${DOTFILES_DIR}/macos/dock.sh" && echo "Dock reloaded."
}

case $COMMAND_NAME in
  "" | "-h" | "--help")
    sub_help
    ;;
  *)
    shift
    sub_${COMMAND_NAME} $@
    if [ $? = 127 ]; then
      echo "'$COMMAND_NAME' is not a known command or has errors." >&2
      sub_help
      exit 1
    fi
    ;;
esac
